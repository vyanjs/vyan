{"version":3,"file":"vyan.js","sources":["../src/createjs/Event.js","../src/createjs/EventDispatcher.js","../src/vyanjs/core/EventRouter.js","../src/vyanjs/core/Router.js","../src/vyanjs/utils/EventUtils.js","../src/vyanjs/events/EventChannel.js","../src/vyanjs/events/EventBroadcaster.js","../src/vyanjs/events/NavigationEvent.js","../src/vyanjs/utils/InstanceId.js","../src/vyanjs/utils/ElementUtils.js","../src/vyanjs/core/View.js","../src/vyanjs/utils/ElementState.js","../src/vyanjs/core/Component.js","../src/vyanjs/core/Container.js","../src/vyanjs/utils/ClassError.js","../src/vyanjs/core/ViewStack.js","../src/vyanjs/core/ViewNavigator.js","../src/vyanjs/core/ViewManager.js","../src/vyanjs/events/GenericEvent.js","../src/vyanjs/utils/BindingUtils.js"],"sourcesContent":["/**\n * @license Event\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Contains properties and methods shared by all events for use with {@link core.EventDispatcher}.\n * Note that Event objects are often reused, so you should never\n * rely on an event object's state outside of the call stack it was received in.\n *\n * @memberof core\n * @example\n * const evt = new Event(\"myEvent\");\n * const dispatcher = new EventDispatcher();\n * dispatcher.on(\"myEvent\", event => console.log(event.type));\n * dispatcher.dispatchEvent(evt); // logs \"myEvent\"\n *\n * @param {string} type The event type.\n * @param {boolean} [bubbles=false] Indicates whether the event will bubble through the display list.\n * @param {boolean} [cancelable=false] Indicates whether the default behaviour of this event can be cancelled.\n */\nclass Event {\n\n    constructor(type, bubbles = false, cancelable = false) {\n        /**\n         * The type of event.\n         * @type string\n         */\n        this.type = type;\n\n        /**\n         * The object that generated an event.\n         *\n         * @type Object\n         * @default null\n         * @readonly\n         */\n        this.target = null;\n\n        /**\n         * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n         * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n         * is generated from childObj, then a listener on parentObj would receive the event with\n         * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n         *\n         * @type Object\n         * @default null\n         * @readonly\n         */\n        this.currentTarget = null;\n\n        /**\n         * For bubbling events, this indicates the current event phase:\n         * <OL>\n         * \t<LI> capture phase: starting from the top parent to the target</LI>\n         * \t<LI> at target phase: currently being dispatched from the target</LI>\n         * \t<LI> bubbling phase: from the target to the top parent</LI>\n         * </OL>\n         *\n         * @type number\n         * @default 0\n         * @readonly\n         */\n        this.eventPhase = 0;\n\n        /**\n         * Indicates whether the event will bubble through the display list.\n         *\n         * @type boolean\n         * @readonly\n         */\n        this.bubbles = bubbles;\n\n        /**\n         * Indicates whether the default behaviour of this event can be cancelled via {@link core.Event#preventDefault}.\n         *\n         * @type boolean\n         * @readonly\n         */\n        this.cancelable = cancelable;\n\n        /**\n         * The epoch time at which this event was created.\n         *\n         * @type number\n         * @readonly\n         */\n        this.timeStamp = new Date().getTime();\n\n        /**\n         * Indicates if {@link core.Event#preventDefault} has been called on this event.\n         *\n         * @type boolean\n         * @default false\n         * @readonly\n         */\n        this.defaultPrevented = false;\n\n        /**\n         * Indicates if {@link core.Event#stopPropagation} or {@link core.Event#stopImmediatePropagation} has been called on this event.\n         *\n         * @type boolean\n         * @default false\n         * @readonly\n         */\n        this.propagationStopped = false;\n\n        /**\n         * Indicates if {@link core.Event#stopImmediatePropagation} has been called on this event.\n         *\n         * @type boolean\n         * @default false\n         * @readonly\n         */\n        this.immediatePropagationStopped = false;\n\n        /**\n         * Indicates if {@link core.Event#remove} has been called on this event.\n         *\n         * @type boolean\n         * @default false\n         * @readonly\n         */\n        this.removed = false;\n    }\n\n    /**\n     * Sets {@link core.Event#defaultPrevented} to true if the event is cancelable.\n     * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n     * cancel the default behaviour associated with the event.\n     * @return {core.Event} this, chainable\n     */\n    preventDefault() {\n        this.defaultPrevented = this.cancelable;\n        return this;\n    }\n\n    /**\n     * Sets {@link core.Event#propagationStopped} to true.\n     * Mirrors the DOM event standard.\n     * @return {core.Event} this, chainable\n     */\n    stopPropagation() {\n        this.propagationStopped = true;\n        return this;\n    }\n\n    /**\n     * Sets {@link core.Event#propagationStopped} and {@link core.Event#immediatePropagationStopped} to true.\n     * Mirrors the DOM event standard.\n     * @return {core.Event} this, chainable\n     */\n    stopImmediatePropagation() {\n        this.immediatePropagationStopped = this.propagationStopped = true;\n        return this;\n    }\n\n    /**\n     * Causes the active listener to be removed via removeEventListener();\n     *\n     * @example\n     * myBtn.addEventListener(\"click\", event => {\n     *   event.remove(); // removes this listener.\n     * });\n     *\n     * @return {core.Event} this, chainable\n     */\n    remove() {\n        this.removed = true;\n        return this;\n    }\n\n    /**\n     * Returns a clone of the Event instance.\n     *\n     * @return {core.Event} a clone of the Event instance.\n     */\n    clone() {\n        const event = new Event(this.type, this.bubbles, this.cancelable);\n        for (let n in this) {\n            if (this.hasOwnProperty(n)) {\n                event[n] = this[n];\n            }\n        }\n        return event;\n    }\n\n    /**\n     * Provides a return {core.Event} this, chainable shortcut method for setting a number of properties on the instance.\n     *\n     * @param {Object} props A generic object containing properties to copy to the instance.\n     * @return {core.Event} this, chainable\n     */\n    set(props) {\n        for (let n in props) { this[n] = props[n]; }\n        return this;\n    }\n\n    /**\n     * Returns a string representation of this object.\n     *\n     * @return {string} A string representation of the instance.\n     */\n    toString() {\n        return `[${this.constructor.name} (type=${this.type})]`;\n    }\n\n}\n\nexport default Event;","/**\n * @license EventDispatcher\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Event from \"./Event\";\n\n/**\n * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n *\n * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\n * EventDispatcher {@link core.EventDispatcher.initialize} method.\n *\n * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\n * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\n * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n *\n * EventDispatcher also exposes a {@link core.EventDispatcher#on} method, which makes it easier\n * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The\n * {@link core.EventDispatcher#off} method is merely an alias to {@link core.EventDispatcher#removeEventListener}.\n *\n * Another addition to the DOM Level 2 model is the {@link core.EventDispatcher#removeAllEventListeners}\n * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also\n * includes a {@link core.Event#remove} method which removes the active listener.\n *\n * @memberof core\n * @example\n * // add EventDispatcher capabilities to the \"MyClass\" class.\n * EventDispatcher.initialize(MyClass.prototype);\n *\n * // Add an event.\n * instance.addEventListener(\"eventName\", event => console.log(event.target + \" was clicked.\"));\n *\n * // scope (\"this\") can be be a challenge with events.\n * // using the {@link core.EventDispatcher#on} method to subscribe to events simplifies this.\n * instance.addEventListener(\"click\", event => console.log(instance === this)); // false, scope is ambiguous.\n * instance.on(\"click\", event => console.log(instance === this)); // true, `on` uses dispatcher scope by default.\n */\nclass EventDispatcher {\n\n\t/**\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\n\t *\n\t * @static\n\t * @example\n\t * EventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t * EventDispatcher.initialize(myInstance); // add to a specific instance\n\t *\n\t * @param {Object} target The target object to inject EventDispatcher methods into.\n\t */\n\tstatic initialize (target) {\n\t\tconst p = EventDispatcher.prototype;\n\t\ttarget.addEventListener = p.addEventListener;\n\t\ttarget.on = p.on;\n\t\ttarget.removeEventListener = target.off = p.removeEventListener;\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\n\t\ttarget.hasEventListener = p.hasEventListener;\n\t\ttarget.dispatchEvent = p.dispatchEvent;\n\t\ttarget._dispatchEvent = p._dispatchEvent;\n\t\ttarget.willTrigger = p.willTrigger;\n\t}\n\n\tconstructor () {\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._listeners = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._captureListeners = null;\n\t}\n\n\t/**\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\n\t * multiple callbacks getting fired.\n\t *\n\t * @example\n\t * displayObject.addEventListener(\"click\", event => console.log('clicked', event));\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function|Object} Returns the listener for chaining or assignment.\n\t */\n\taddEventListener (type, listener, useCapture = false) {\n\t\tlet listeners;\n\t\tif (useCapture) {\n\t\t\tlisteners = this._captureListeners = this._captureListeners || {};\n\t\t} else {\n\t\t\tlisteners = this._listeners = this._listeners || {};\n\t\t}\n\t\tlet arr = listeners[type];\n\t\tif (arr) {\n\t\t\tthis.removeEventListener(type, listener, useCapture);\n\t\t\tarr = listeners[type]; // remove may have deleted the array\n\t\t}\n\t\tif (arr) { arr.push(listener);  }\n\t\telse { listeners[type] = [listener]; }\n\t\treturn listener;\n\t}\n\n\t/**\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\n\t *\n\t * This method works by creating an anonymous wrapper function and subscribing it with `addEventListener`.\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n\t * {@link core.Event#remove}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\n\t * to `on` with the same params will create multiple listeners.\n\t *\n\t * @example\n\t * const listener = myBtn.on(\"click\", handleClick, null, false, { count: 3 });\n\t * function handleClick (evt, data) {\n\t *   data.count -= 1;\n\t *   console.log(this == myBtn); // true - scope defaults to the dispatcher\n\t *   if (data.count == 0) {\n\t *     alert(\"clicked 3 times!\");\n\t *     myBtn.off(\"click\", listener);\n\t *     // alternately: evt.remove();\n\t *   }\n\t * }\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {Object} [scope=null] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\n\t * @param {boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\n\t * @param {*} [data={}] Arbitrary data that will be included as the second parameter when the listener is called.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\n\t */\n\ton (type, listener, scope = null, once = false, data = {}, useCapture = false) {\n\t\tif (listener.handleEvent) {\n\t\t\tscope = scope || listener;\n\t\t\tlistener = listener.handleEvent;\n\t\t}\n\t\tscope = scope || this;\n\t\treturn this.addEventListener(type, evt => {\n\t\t\tlistener.call(scope, evt, data);\n\t\t\tonce && evt.remove();\n\t\t}, useCapture);\n\t}\n\n\t/**\n\t * Removes the specified event listener.\n\t *\n\t * You must pass the exact function reference used when the event was added. If a proxy\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\n\t * closure will not work.\n\t *\n\t * @example\n\t * displayObject.removeEventListener(\"click\", handleClick);\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\tremoveEventListener (type, listener, useCapture = false) {\n\t\tconst listeners = useCapture ? this._captureListeners : this._listeners;\n\t\tif (!listeners) { return; }\n\t\tconst arr = listeners[type];\n\t\tif (!arr) { return; }\n\t\tconst l = arr.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tif (arr[i] === listener) {\n\t\t\t\tif (l === 1) { delete(listeners[type]); } // allows for faster checks.\n\t\t\t\telse { arr.splice(i, 1); }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n\t * `on` method.\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See\n\t * {@link core.EventDispatcher#on} for an example.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\toff (type, listener, useCapture = false) {\n\t\tthis.removeEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Removes all listeners for the specified type, or all listeners of all types.\n\t *\n\t * @example\n\t * // remove all listeners\n\t * displayObject.removeAllEventListeners();\n\t *\n\t * // remove all click listeners\n\t * displayObject.removeAllEventListeners(\"click\");\n\t *\n\t * @param {string} [type=null] The string type of the event. If omitted, all listeners for all types will be removed.\n\t */\n\tremoveAllEventListeners (type = null) {\n\t\tif (type) {\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\n\t\t} else {\n\t\t\tthis._listeners = this._captureListeners = null;\n\t\t}\n\t}\n\n\t/**\n\t * Dispatches the specified event to all listeners.\n\t *\n\t * @example\n\t * // use a string event\n\t * this.dispatchEvent(\"complete\")\n\t *\n\t * // use an Event instance\n\t * const event = new createjs.Event(\"progress\");\n\t * this.dispatchEvent(event);\n\t *\n\t * @param {Object|Event|string} eventObj An object with a \"type\" property, or a string type.\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\n\t * @param {boolean} [bubbles=false] Specifies the `bubbles` value when a string was passed to eventObj.\n\t * @param {boolean} [cancelable=false] Specifies the `cancelable` value when a string was passed to eventObj.\n\t * @return {boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\n\t */\n\tdispatchEvent (eventObj, bubbles = false, cancelable = false) {\n\t\tif (typeof eventObj === \"string\") {\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\n\t\t\tconst listeners = this._listeners;\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\n\t\t\teventObj = new Event(eventObj, bubbles, cancelable);\n\t\t} else if (eventObj.target && eventObj.clone) {\n\t\t\t// redispatching an active event object, so clone it:\n\t\t\teventObj = eventObj.clone();\n\t\t}\n\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\n\n\t\tif (!eventObj.bubbles || !this.parent) {\n\t\t\tthis._dispatchEvent(eventObj, 2);\n\t\t} else {\n\t\t\tlet top = this;\n\t\t\tconst list = [top];\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\n\t\t\tconst l = list.length;\n\t\t\tlet i;\n\n\t\t\t// capture & atTarget\n\t\t\tfor (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\n\t\t\t}\n\t\t\t// bubbling\n\t\t\tfor (i = 1; i < l && !eventObj.propagationStopped; i++) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\n\t\t\t}\n\t\t}\n\t\treturn !eventObj.defaultPrevented;\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns true if there is at least one listener for the specified event.\n\t */\n\thasEventListener (type) {\n\t\tconst listeners = this._listeners, captureListeners = this._captureListeners;\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\n\t * specified type is dispatched from this object, it will trigger at least one listener.\n\t *\n\t * This is similar to {@link core.EventDispatcher#hasEventListener}, but it searches the entire\n\t * event flow for a listener, not just this object.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns `true` if there is at least one listener for the specified event.\n\t */\n\twillTrigger (type) {\n\t\tlet o = this;\n\t\twhile (o) {\n\t\t\tif (o.hasEventListener(type)) { return true; }\n\t\t\to = o.parent;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name + this.name ? ` ${this.name}` : \"\"}]`;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object|Event|string} eventObj\n\t * @param {Object} eventPhase\n\t */\n\t_dispatchEvent (eventObj, eventPhase) {\n\t\tconst listeners = eventPhase === 1 ? this._captureListeners : this._listeners;\n\t\tif (eventObj && listeners) {\n\t\t\tlet arr = listeners[eventObj.type];\n\t\t\tlet l;\n\t\t\tif (!arr || (l = arr.length) === 0) { return; }\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\n\t\t\ttry { eventObj.eventPhase = eventPhase; } catch (e) {}\n\t\t\teventObj.removed = false;\n\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n\t\t\tfor (let i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n\t\t\t\tlet o = arr[i];\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\n\t\t\t\telse { o(eventObj); }\n\t\t\t\tif (eventObj.removed) {\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase === 1);\n\t\t\t\t\teventObj.removed = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport default EventDispatcher;\n","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\n/**\r\n * EventRouter\r\n */\r\n\r\n class EventRouter {\r\n\r\n\r\n    /**\r\n     * @description EventRouter holds and manages array of event routes\r\n     * Event Routes are used by ViewNavigator to find associated View and Viewstack\r\n     * @param {array} [_routes=[]] - Events routes array\r\n     * @memberof EventRouter\r\n     */\r\n    constructor(_routes = []) {\r\n        this.routes = _routes;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Adds new Event Route\r\n     * @param {string} _navEvent - Navigation Event Name\r\n     * @param {string} _viewstackId - ViewStack ID\r\n     * @param {string} _viewId -  View ID\r\n     * @param {string} _path -  Navigator Route path associted \r\n     * @memberof EventRouter\r\n     */\r\n    addRoute(_navEvent, _viewstackId, _viewId, _path) {\r\n        let route = {};\r\n        route.navEvent = _navEvent;\r\n        route.viewstackId = _viewstackId;\r\n        route.viewId = _viewId;\r\n        route.path = _path;\r\n        this.routes.push(route);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description find Event Route using Naviagtion EventName\r\n     * @param {string} _navEvent\r\n     * @returns {Object} Event Route Object\r\n     * @memberof EventRouter\r\n     */\r\n    findRoute(_navEvent) {\r\n        let tmpRoute = [];\r\n        for (let x = 0; x < this.routes.length; x++) {\r\n            if (this.routes[x].navEvent == _navEvent)\r\n                tmpRoute = this.routes[x];\r\n        }\r\n        return tmpRoute;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description finds associated view by Navigation EventName and Path\r\n     * @param {string} _navEvent\r\n     * @param {string} _path\r\n     * @returns {string} - ViewID \r\n     * @memberof EventRouter\r\n     */\r\n    findViewId(_navEvent, _path) {\r\n        let tmpViewId = [];\r\n        for (let i = 0; i < this.routes.length; i++) {\r\n            if ((this.routes[i].navEvent == _navEvent) && (this.routes[i].path == _path))\r\n                tmpViewId = this.routes[i].viewId;\r\n        }\r\n        return tmpViewId;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description finds associated viewstack by Navigation EventName and Path\r\n     * @param {string} _navEvent\r\n     * @param {string} _path\r\n     * @returns {string} - ViewStackID\r\n     * @memberof EventRouter\r\n     */\r\n    findViewStackId(_navEvent, _path) {\r\n        let tmpViewStackId = null;\r\n        for (let j = 0; j < this.routes.length; j++) {\r\n            if ((this.routes[j].navEvent == _navEvent) && (this.routes[j].path == _path))\r\n                tmpViewStackId = this.routes[j].viewstackId;\r\n        }\r\n        return tmpViewStackId;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Remove and Resets existing event routes\r\n     * @memberof EventRouter\r\n     */\r\n    reset() {\r\n        this.routes = [];\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description prints Event Routes\r\n     * @memberof EventRouter\r\n     */\r\n    printRoutes() {\r\n        if (this.routes.length > 0) {\r\n            for (let i = 0; i < this.routes.length; i++) {\r\n                console.log(\"navEvent:\" + this.routes[i].navEvent + \" viewstackId:\" + this.routes[i].viewstackId + \" viewId:\" + this.routes[i].viewId);\r\n            }\r\n        } else {\r\n            console.log(\"No Routes Found\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default EventRouter;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n/**\r\n *\r\n * Router\r\n */\r\nclass Router {\r\n\r\n    /**\r\n     * @description Router holds and manages array of Path routes\r\n     * Path Routes are used by ViewManager to find associated Navigator and Viewstack\r\n     * @param {array} [_routes=[]] - Path routes array\r\n     * @memberof Router\r\n     */\r\n    constructor(_routes = []) {\r\n        this.routes = _routes;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Adds new Path Route\r\n     * @param {string} _path - Path Name\r\n     * @param {string} _navigatorId -  Navigator ID\r\n     * @param {string} _parentId -  Parent Object / Element ID\r\n     * @memberof Router\r\n     */\r\n    addRoute(_path, _navigatorId, _parentId) {\r\n        let route = {};\r\n        route.path = _path;\r\n        route.navigatorId = _navigatorId;\r\n        route.parentId = _parentId;\r\n        this.routes.push(route);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description finds associated Navigator by Path route Name\r\n     * @param {string} _route\r\n     * @returns {Array} - NavigatorID Array\r\n     * @memberof Router\r\n     */\r\n    findNavigator(_route) {\r\n        let tmpNavigatorIds = [];\r\n        for (let i = 0; i < this.routes.length; i++) {\r\n            if (this.routes[i].path === _route)\r\n                tmpNavigatorIds.push(this.routes[i].navigatorId);\r\n        }\r\n        return tmpNavigatorIds;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description finds associated Navigator Parent by navigator ID\r\n     * @param {string} _navigatorId\r\n     * @returns {string} - Parent ID\r\n     * @memberof Router\r\n     */\r\n    findNavigatorParent(_navigatorId) {\r\n        let tmpParentId = \"root\";\r\n        for (let i = 0; i < this.routes.length; i++) {\r\n            if (this.routes[i].navigatorId === _navigatorId)\r\n                tmpParentId = this.routes[i].parentId;\r\n        }\r\n        return tmpParentId;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description finds associated ViewStack  by Path route Name\r\n     * @param {string} _route\r\n     * @returns {string} - ViewStack ID\r\n     * @memberof Router\r\n     */\r\n    findViewStack(_route) {\r\n        let tmpViewStackId = null;\r\n        for (let j = 0; j < this.routes.length; j++) {\r\n            if (this.routes[j].path == _route)\r\n                tmpViewStackId = this.routes[j].viewstackId;\r\n        }\r\n        return tmpViewStackId;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description Remove and Resets existing path routes\r\n     * @memberof Router\r\n     */\r\n    reset() {\r\n        this.routes = [];\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description prints path Routes\r\n     * @memberof Router\r\n     */\r\n    printRoutes() {\r\n        if (this.routes.length > 0) {\r\n            for (let i = 0; i < this.routes.length; i++) {\r\n                console.log(\"path:\" + this.routes[i].path + \" navigatorId:\" + this.routes[i].navigatorId);\r\n            }\r\n        } else {\r\n            console.log(\"No Routes Found\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Router;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\n/**\r\n *\r\n *\r\n * @class EventUtils\r\n */\r\nclass EventUtils {\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get FORGOTPWD_NAV_EVENT() {\r\n        return \"Forgotpwd_Nav_Event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get REGISTER_NAV_EVENT() {\r\n        return \"Register_Nav_Event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get BACK_NAV_EVENT() {\r\n        return \"Back_Nav_Event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get NAV_CHANGE_EVENT() {\r\n        return \"navigation_change_event\";\r\n    }\r\n\r\n    //View,Navigator Specific Events\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get INITIALIZE_EVENT() {\r\n        return \"initialize_event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get ATTACHED_EVENT() {\r\n        return \"attached_event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get DETACHED_EVENT() {\r\n        return \"detached_event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get ACTIVATE_EVENT() {\r\n        return \"activate_event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get DEACTIVATE_EVENT() {\r\n        return \"deactivate_event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get CHANGE() {\r\n        return \"change\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get CLICK() {\r\n        return \"click\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get VIEW_EVENT(){\r\n        return \"view_event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get MODEL_EVENT(){\r\n        return \"model_event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get COMPONENT_EVENT(){\r\n        return \"component_event\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default EventUtils;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport EventDispatcher from \"../../createjs/EventDispatcher\";\r\n\r\n/**\r\n *\r\n \r\n * EventChannel\r\n * @extends {EventDispatcher}\r\n */\r\nclass EventChannel extends EventDispatcher {\r\n\r\n    /**\r\n     * @description Eventchannel use to Publish event to Channel subscriber\r\n     * It also known as PubSub\r\n     * @example EventBroadCaster.navEventChannel.dispatchEvent(navEvent);\r\n     * @param {String} _id - EventChannel ID\r\n     * @memberof EventChannel\r\n     */\r\n    constructor(_id) {\r\n        super();\r\n        this.id = _id;\r\n    }\r\n}\r\n\r\nexport default EventChannel;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nimport EventChannel from './EventChannel';\r\n\r\n/**\r\n *\r\n * \r\n * EventBroadCaster\r\n */\r\nclass EventBroadCaster {\r\n\r\n\r\n    /**\r\n     * @description Singleton Static Class use to Broadcast Events in Application on Publish / Subscribe to Application Channel and Navigation Channel\r\n     * @memberof EventBroadCaster\r\n     */\r\n    constructor() {\r\n        if (!EventBroadCaster.instance) {\r\n            EventBroadCaster.instance = this;\r\n            this.appEvtChannel = new EventChannel(\"APPLICATIONEVENT\");\r\n            this.navEvtChannel = new EventChannel(\"NAVIGATIONEVENT\");\r\n        }\r\n        return EventBroadCaster.instance;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * @description Returns Application Event Channel Instance\r\n     * @returns {Object}\r\n     * @readonly\r\n     * @memberof EventBroadCaster\r\n     */\r\n    get appEventChannel() {\r\n        return this.appEvtChannel;\r\n    }\r\n\r\n\r\n    /**\r\n     * @description Returns Navigation Event Channel Instance\r\n     * @returns {Object} \r\n     * @readonly\r\n     * @memberof EventBroadCaster\r\n     */\r\n    get navEventChannel() {\r\n        return this.navEvtChannel;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nconst MessageBus = new EventBroadCaster();\r\n// prevents new properties from being added to the object\r\nObject.freeze(MessageBus);\r\n\r\nexport default MessageBus;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nimport Event from \"../../createjs/Event\";\r\n\r\n\r\n/**\r\n *\r\n * \r\n * NavigationEvent\r\n * @extends {Event}\r\n */\r\nclass NavigationEvent extends Event {\r\n\r\n    /**\r\n     * @description Generates Event with Navigation Type . Useful to dispatched Event with EventName, Params, Event Type, Route\r\n     * @param {string} _type\r\n     * @param {string} _eventName\r\n     * @param {Object} _params\r\n     * @param {string} _route\r\n     * @param {*} _bubbles\r\n     * @param {Boolean} _cancelable\r\n     * @memberof NavigationEvent\r\n     */\r\n    constructor(_type, _eventName, _params, _route, _bubbles, _cancelable, ) {\r\n        super(_type, _bubbles, _cancelable);\r\n        this.type = _type;\r\n        this.eventName = _eventName;\r\n        this.params = _params;\r\n        this.route = _route;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @returns {Object} - creates and return NavigationEvent Instance\r\n     * @memberof NavigationEvent\r\n     */\r\n    clone() {\r\n        return new NavigationEvent(this.type, this.eventName, this.params, this.route, this.bubbles, this.cancelable);\r\n    }\r\n}\r\n\r\nexport default NavigationEvent;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\n/**\r\n *\r\n * Generates Unique Instance ID\r\n * @class InstanceId\r\n */\r\nclass InstanceId {\r\n\r\n    constructor() {\r\n        if (!InstanceId.instance) {\r\n            InstanceId.instance = this;\r\n            this.counter = 0;\r\n        }\r\n        return InstanceId.instance;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns Unique Instance ID\r\n     * @readonly\r\n     * @memberof InstanceId\r\n     */\r\n    get generate() {\r\n        return this.counter++;\r\n    }\r\n\r\n}\r\n\r\nconst GenInstanceId = new InstanceId();\r\nexport default GenInstanceId;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nimport InstanceId from './InstanceId';\r\n\r\n\r\n/**\r\n *\r\n * Core UI Template Utility Class \r\n * Templates for \r\n * View, ViewNavigator, ViewStack, Component, Container\r\n * @class ElementUtils\r\n */\r\nclass ElementUtils {\r\n\r\n    \r\n    /**\r\n     * \r\n     * TODO:: Search Component in View Scope Only\r\n     * TODO :: Search Container in View Scope Only\r\n     * TODO :: Search View,ViewStack in ViewNavigator Scope Only \r\n     */\r\n    \r\n    \r\n    /**\r\n     *\r\n     * Find  Component DOM Element by ComponentID\r\n     * @static\r\n     * @param {string} _componentId\r\n     * @param {string} _viewId\r\n     * @returns {string} Component DOM Element with \".vjs-component\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static component(_componentId,_viewId) {\r\n        let viewEl = ElementUtils.view(_viewId);\r\n        return viewEl.querySelector(\".vjs-component.\" + _componentId);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Find  Container DOM Element by ContainerID\r\n     * @static\r\n     * @param {string} _containerId\r\n     * @param {string} _viewId\r\n     * @returns {string} Container DOM Element with \".vjs-container\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static container(_containerId,_viewId) {\r\n        let viewEl = ElementUtils.view(_viewId);\r\n        return viewEl.querySelector(\".vjs-container.\" + _containerId);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Find  View DOM Element by ViewID\r\n     * @static\r\n     * @param {string} _viewId\r\n     * @returns {string} View DOM Element with \".vjs-view\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static view(_viewId) {\r\n        return document.querySelector(\".vjs-view.\" + _viewId);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Find  ViewStack DOM Element by ViewStackID\r\n     * @static\r\n     * @param {string} _viewStackId\r\n     * @returns {string} ViewStack DOM Element with \".vjs-viewstack\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static viewStack(_viewStackId) {\r\n        return document.querySelector(\".vjs-viewstack.\" + _viewStackId);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Find  ViewNavigator DOM Element by ViewNavigatorID\r\n     * @static\r\n     * @param {string} _viewNavId\r\n     * @returns {string} ViewNavigator DOM Element with \".vjs-viewnavigator\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static viewNavigator(_viewNavId) {\r\n        return document.querySelector(\".vjs-viewnavigator.\" + _viewNavId);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Creates  Component Base DOM Element by ComponentID\r\n     * @static\r\n     * @param {string} _componentId\r\n     * @returns {string} Component DOM Element with \".vjs-component\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static constructComponentBaseElement(_componentId) {\r\n        return `<div class=\"vjs-component ${_componentId}\"></div>`;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Creates  Container Base DOM Element by ContainerID\r\n     * @static\r\n     * @param {string} _containerId\r\n     * @returns {string} Container DOM Element with \".vjs-container\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static constructContainerBaseElement(_containerId) {\r\n        return `<div class=\"vjs-container ${_containerId}\"></div>`;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * Creates  View Base DOM Element by ViewID\r\n     * @static\r\n     * @param {string} _viewId\r\n     * @returns {string} View DOM Element with \".vjs-view\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static constructViewBaseElement(_viewId) {\r\n        return `<div class=\"vjs-view ${_viewId}\"></div>`;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Creates  ViewStack Base DOM Element by ViewStackID\r\n     * @static\r\n     * @param {string} _viewStackId\r\n     * @returns {string} ViewStack DOM Element with \".vjs-viewstack\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static constructViewStackBaseElement(_viewStackId) {\r\n        return `<div class=\"vjs-viewstack ${_viewStackId}\"></div>`;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Creates  ViewNavigator Base DOM Element by ViewNavigatorID\r\n     * @static\r\n     * @param {string} _navigatorId\r\n     * @returns {string} ViewNavigator DOM Element with \".vjs-viewnavigator\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static constructNavigatorBaseElement(_navigatorId) {\r\n        return `<div class=\"vjs-viewnavigator ${_navigatorId}\"></div>`;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Hide DOM Element\r\n     * @static\r\n     * @param {string} _el - DOM Element\r\n     * @memberof ElementUtils\r\n     */\r\n    static hideElement(_el) {\r\n        _el.style.display = 'none';\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Show DOM Element\r\n     * @static\r\n     * @param {string} _el -  DOM Element\r\n     * @memberof ElementUtils\r\n     */\r\n    static showElement(_el) {\r\n        _el.style.display = 'block';\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Check if DOM Element is visible\r\n     * @static\r\n     * @param {string} _el - DOM Element\r\n     * @returns {Boolean} \r\n     * @memberof ElementUtils\r\n     */\r\n    static isVisible(_el){\r\n        return (_el.style.display == \"block\") ? true :false;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Generate Unique Component Instance ID\r\n     * @static\r\n     * @returns {string} \r\n     * @memberof ElementUtils\r\n     */\r\n    static generateComponentId(){\r\n        return \"component\"+InstanceId.generate;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Generate Unique Container Instance ID\r\n     * @static\r\n     * @returns {string}\r\n     * @memberof ElementUtils\r\n     */\r\n    static generateContainerId(){\r\n        return \"container\"+InstanceId.generate;\r\n    }\r\n}\r\n\r\nexport default ElementUtils;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport EventDispatcher from \"../../createjs/EventDispatcher\";\r\nimport Event from '../../createjs/Event';\r\nimport EventUtils from '../utils/EventUtils';\r\nimport EventBroadCaster from '../events/EventBroadcaster';\r\nimport NavigationEvent from '../events/NavigationEvent';\r\nimport ElementUtils from '../utils/ElementUtils';\r\n\r\n/**\r\n * \r\n * View\r\n * @extends {EventDispatcher}\r\n */\r\nclass View extends EventDispatcher {\r\n\r\n\r\n    /**\r\n     * @description View consider as single UI screen. \r\n     * View contains Contents consist of \"Containers\" and \"Components\". \r\n     * View can be use with Core HTML Components also.\r\n     * View manages View Template or DOM Content such behaviour, event listners etc.\r\n     * View created and manage by ViewNavigator.\r\n     * @param {String} _id - View Id\r\n     * @param {String} _route - View Route\r\n     * @param {String} _navevent - View Navigation Event Name\r\n     * @param {String} _navparams - Parameters pass to View \r\n     * @param {String} _parentViewStackId - Parent Viewstack Id \r\n     * @memberof View\r\n     */\r\n    constructor(_id, _route,_navevent, _navparams, _parentViewStackId) {\r\n        super();\r\n        this.id = _id;\r\n        this.route = _route;\r\n        this.navEvent = _navevent;\r\n        this.navParams = _navparams;\r\n        this.parentViewStackId = _parentViewStackId;\r\n        this.navigatorContainerId = null; // Use when View is ParentNavigator\r\n        this.isAttached = false;\r\n        this.isActive = false;\r\n        this.initView();\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n      @param {Event} event - Back Navigation Event dispatch by view component or method\r\n     * @memberof View\r\n     */\r\n    dispatchNavBackEvent(event) {\r\n        event.preventDefault();\r\n        let navEvent = new NavigationEvent(EventUtils.NAV_CHANGE_EVENT, EventUtils.BACK_NAV_EVENT, null, this.route);\r\n        EventBroadCaster.navEventChannel.dispatchEvent(navEvent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @override\r\n     * @description Call by View Constructor\r\n     * @public\r\n     * @memberof View\r\n     */\r\n    initView() {}\r\n\r\n    /**\r\n     * @override\r\n     * @description Create View Contents and Internal Components\r\n     * @public\r\n     * @memberof View\r\n     */\r\n    createViewContent() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @description Add Event Handlers for view Internal Components\r\n     * @public\r\n     * @memberof View\r\n     */\r\n    addViewHandler() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @description Remove Event Handlers for view Internal Components\r\n     * @memberof View\r\n     */\r\n    removeViewHandler() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @description Bind View Component Properties with Model or other view Components\r\n     * @public\r\n     * @memberof View\r\n     */\r\n    bindView() {}\r\n\r\n    /**\r\n     * @override\r\n     * @description Remove Bind View Component Properties with Model or other view Components\r\n     * @public\r\n     * @memberof View\r\n     */\r\n    unBindView() {}\r\n\r\n    /**\r\n     * @override\r\n     * @description Destroy Method used to cleanup view resources\r\n     * Call by ViewNavigator to destroy view\r\n     * Remove Event Handlers, Make Properties null, \r\n     * Remove View Components and its reference.\r\n     * @public\r\n     * @memberof View\r\n     **/\r\n    destroy() {\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * View Lifecycle Method,\r\n     * Call by ViewNavigator,\r\n     * \r\n     * attachView Responsible to render view content, listners etc,\r\n     * \r\n     * Dispatch \"ATTACHED_EVENT\" when view got attached / rendered,\r\n     * \r\n     * Following methods call by attachView :\r\n     * createViewContent\r\n     * addViewHandler\r\n     * bindView\r\n     * @param {String} _parentEl \r\n     */\r\n    attachView(_parentEl = null) {\r\n        if (!this.isAttached) {\r\n            let parentEl = _parentEl;\r\n            if (parentEl == null)\r\n                parentEl = ElementUtils.viewStack(this.parentViewStackId);\r\n            parentEl.insertAdjacentHTML('beforeend', ElementUtils.constructViewBaseElement(this.id));\r\n            this.isAttached = true;\r\n            let tmpEle = this.getViewElement();\r\n            ElementUtils.hideElement(tmpEle);\r\n            //Create View Contents and Internal Components\r\n            this.createViewContent();\r\n            //Add Event Handlers for view Internal Components\r\n            this.addViewHandler();\r\n            //Bind View Component Properties with Model or other view Components\r\n            this.bindView();\r\n            this.dispatchEvent(EventUtils.ATTACHED_EVENT);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * View Lifecycle Method\r\n     * \r\n     * Call by ViewNavigator\r\n     * \r\n     * attached View visible\r\n     * @public\r\n     * @memberof View\r\n     */\r\n    activateView() {\r\n        if (!this.isActive) {\r\n            let tmpViewEl = this.getViewElement();\r\n            ElementUtils.showElement(tmpViewEl);\r\n            this.isActive = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * View Lifecycle Method\r\n     * \r\n     * Call by ViewNavigator\r\n     * \r\n     * attached View if visible (active) then will become nonvisible\r\n     * @public\r\n     * @memberof View\r\n     */\r\n    deActivateView() {\r\n        if (this.isActive) {\r\n            let tmpViewEl = this.getViewElement();\r\n            ElementUtils.hideElement(tmpViewEl);\r\n            this.isActive = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * View Lifecycle Method\r\n     * \r\n     * Call by ViewNavigator\r\n     * \r\n     * View will be remove if View is attached \r\n     * @public\r\n     * @memberof View  \r\n    */\r\n    detachView() {\r\n        if (this.isAttached) {\r\n            this.unBindView();\r\n            this.removeViewHandler();\r\n            let tmpViewEle = this.getViewElement();\r\n            tmpViewEle.parentNode.removeChild(tmpViewEle);\r\n            this.isAttached = false;\r\n            this.dispatchEvent(EventUtils.DETACHED_EVENT);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description RefreshView method reset View properties or data\r\n     * @override\r\n     * @memberof View\r\n    */\r\n    refreshView() {\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description Returns View DOM Element\r\n     * @returns {string} \r\n     * @memberof View\r\n     */\r\n    getViewElement() {\r\n        let tmpViewEl = null;\r\n        if (this.isAttached) {\r\n            tmpViewEl = ElementUtils.view(this.id);\r\n        }\r\n\r\n        return tmpViewEl;\r\n    }\r\n\r\n    getNavContainerId(){\r\n        return this.navigatorContainerId;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Add Content DOM ELement to View DOM Element\r\n     * @param {string} _tmpViewContentEl - Content DOM Element\r\n     * @memberof View\r\n     */\r\n    addToViewElement(_tmpViewContentEl){\r\n        let tmpViewElement = this.getViewElement();\r\n        tmpViewElement.insertAdjacentHTML('beforeend', _tmpViewContentEl);\r\n    }\r\n\r\n}\r\n\r\nexport default View;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\n/**\r\n *\r\n *\r\n * @class ElementState\r\n */\r\nclass ElementState {\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get LOADING() {\r\n        return \"loading\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get LOADED() {\r\n        return \"loaded\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get SUCCESS() {\r\n        return \"success\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get ERROR() {\r\n        return \"error\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get WARNING() {\r\n        return \"warning\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get READONLY() {\r\n        return \"readonly\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get ENABLED() {\r\n        return \"enabled\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get DISABLED() {\r\n        return \"disabled\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get DEFAULT() {\r\n        return \"default\";\r\n    }\r\n\r\n}\r\n\r\nexport default ElementState;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport EventDispatcher from \"../../createjs/EventDispatcher\";\r\nimport EventUtils from '../utils/EventUtils';\r\nimport ElementUtils from '../utils/ElementUtils';\r\nimport ElementState from '../utils/ElementState';\r\n\r\n\r\n/**\r\n *\r\n *\r\n * Component\r\n * @extends {EventDispatcher}\r\n */\r\nclass Component extends EventDispatcher {\r\n    \r\n    /**\r\n     * Creates an instance of Component.\r\n     * @param {string} [_id=null] - ComponentID\r\n     * @param {string} [_parentViewId=null] - Component Parent View ID\r\n     * @param {string} [_parentContainerId=null] - Component Parent Container ID\r\n     * @param {boolean} [_createDOMElement=true] - True if Component DOM element create from Template , False if taken from DOM.\r\n     * @memberof Component\r\n     */\r\n    constructor(_id = null, _parentViewId = null,_parentContainerId=null, _createDOMElement = true) {\r\n        super();\r\n        this.isEnabled= true;\r\n        this.isAttached = false;\r\n        this.elState = ElementState.DEFAULT;\r\n        this.isRequired = false;\r\n        this.isReadOnly = false;\r\n        this.createDOMElement = _createDOMElement;\r\n        this.id = _id;\r\n        this.formId = \"defaultform\";\r\n        if((_id == null)|| (_id == \"\"))\r\n            this.id = ElementUtils.generateComponentId();\r\n        this.parentViewId = _parentViewId;\r\n        this.parentContainerId = _parentContainerId;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * Initialise Component properties and model\r\n     * Call by View or Parent\r\n     * @memberof Component\r\n     */\r\n    init() {\r\n\t\tthis.initComponent();\r\n\t}\r\n    \r\n    /**\r\n     * @override\r\n     * @description call by init method\r\n     * @memberof Component\r\n     */\r\n    initComponent(){}\r\n \r\n    /**\r\n     * creates DOM Contents of Component\r\n     * Overrides by SubClass\r\n     * Call by attach Method\r\n     */\r\n    createDOMContent() {}\r\n\r\n    /**\r\n     *\r\n     * Add Component Content DOM Element to Component\r\n     * @param {string} _tmpCompContentEl - DOMElement \r\n     * @memberof Component\r\n     */\r\n    addToComponentElement(_tmpCompContentEl){\r\n        let tmpCompElement = this.componentElement;\r\n        tmpCompElement.insertAdjacentHTML('beforeend', _tmpCompContentEl);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * \r\n     * @description Add Event Handlers for Component DOM Elements and Model\r\n     * Call by attach & set domElement Method\r\n     * @override\r\n     * @memberof Component\r\n     */\r\n    addEventHandler() {}\r\n\r\n    /**\r\n     * @override\r\n     * @description Remove Event Handlers for Component DOM Elements and Model\r\n     * call by destroy method\r\n     * @memberof Component\r\n     */\r\n    removeEventHandler() {}\r\n\r\n    /**\r\n     * Overrides by SubClass\r\n     * Bind Component Properties with Model or other Components\r\n     * call by attach & view\r\n     */ \r\n    bind() {}\r\n\r\n    /**\r\n     * Overrides by SubClass\r\n     * Remove Bind on Component Properties with Model or other Components\r\n     */\r\n    unBind() {}\r\n\r\n    /**\r\n     * returns Component DOM Element\r\n     */\r\n    get componentElement() {\r\n        let tmpComponentEl = null;\r\n        if (this.isAttached) {\r\n            tmpComponentEl = ElementUtils.component(this.id,this.parentViewId);\r\n        }\r\n        return tmpComponentEl;\r\n    }\r\n    \r\n    /**\r\n     * returns ParentViewID\r\n     */\r\n    get parentView(){\r\n        return this.parentViewId;\r\n    }\r\n\r\n    /**\r\n     * returns Parent Container ID\r\n     */\r\n    get parentContainer(){\r\n        return this.parentContainerId;\r\n    }\r\n\r\n    /**\r\n     * returns Component current state\r\n     */\r\n    get currentState() {\r\n        return this.elState;\r\n    }\r\n\r\n    /**\r\n     * change Component State\r\n     */\r\n    changeState(_state = \"default\"){\r\n        this.elState = _state;\r\n        this.changeComponentState();\r\n    }\r\n\r\n    /**\r\n     * change Component State\r\n     * Overrides by Subclass\r\n     */\r\n    changeComponentState(){}\r\n\r\n    /**\r\n     * returns True if Component is Required\r\n     */\r\n    get required(){\r\n        return this.isRequired;\r\n    }\r\n\r\n    set required(_isRequired = false){\r\n        this.isRequired = _isRequired;\r\n        this.setComponentRequired();\r\n    }\r\n\r\n    /**\r\n     * Overrides by Subclass\r\n     */\r\n    setComponentRequired(){}\r\n\r\n    /**\r\n     * returns True if Component is ResdyOnly\r\n     */\r\n    get readOnly(){\r\n        return this.isReadOnly;\r\n    }\r\n\r\n    set readOnly(_isReadOnly = false){\r\n        this.isReadOnly = _isReadOnly;\r\n        if(this.isReadOnly == true){\r\n            this.changeState(ElementState.READONLY);\r\n        }else{\r\n            this.changeState(ElementState.DEFAULT);\r\n        }\r\n        this.setComponentReadOnly();\r\n    }  \r\n    \r\n    /**\r\n     * Overrides by Subclass\r\n     */\r\n    setComponentReadOnly(){}\r\n\r\n\r\n    /**\r\n     * Boolean Property , returns True if Component is Enabled\r\n     */\r\n    get enabled() {\r\n        return this.isEnabled;\r\n    }\r\n\r\n    set enabled(_isenabled = false){\r\n        this.isEnabled = _isenabled;\r\n        this.setComponentEnabled();\r\n    }\r\n\r\n    /**\r\n     * Overrides by Subclass\r\n     */\r\n    setComponentEnabled(){}\r\n\r\n    /**\r\n     * Boolean Property , returns True if Component is Visible\r\n     */\r\n    get visible(){\r\n        let tmpComponentEl = this.componentElement;\r\n        return ElementUtils.isVisible(tmpComponentEl);\r\n    }\r\n\r\n    set visible(_visible){\r\n        let tmpComponentEl = this.componentElement;\r\n        if(_visible)\r\n            ElementUtils.showElement(tmpComponentEl);\r\n        else \r\n            ElementUtils.hideElement(tmpComponentEl);\r\n\r\n    }\r\n\r\n     /**\r\n     * Component Lifecycle Method\r\n     * Call by View or call manually \r\n     * attach Responsible to render component content, listners etc\r\n     * Dispatch \"ATTACHED_EVENT\" when view got attached / rendered \r\n     * Following methods call by attach method\r\n     * createDOMContent\r\n     * addViewHandler\r\n     * bind\r\n     *  \r\n     */\r\n     attach() {\r\n        if (!this.isAttached) {   \r\n            this.isAttached = true;\r\n            if(this.createDOMElement == true){\r\n                let parentEl = ElementUtils.container(this.parentContainerId,this.parentViewId);\r\n                parentEl.insertAdjacentHTML('beforeend', ElementUtils.constructComponentBaseElement(this.id));\r\n                let tmpEle = this.componentElement;\r\n                ElementUtils.hideElement(tmpEle);\r\n                //Create  Contents and Internal Components\r\n                this.createDOMContent();\r\n            }\r\n            \r\n            //Add Event Handlers for view Internal Components\r\n            this.addEventHandler();\r\n            //Bind  Component Properties with Model or other  Components\r\n            this.bind();\r\n            this.enabled = true;\r\n            this.visible = true;\r\n            this.dispatchEvent(EventUtils.ATTACHED_EVENT);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component Lifecycle Method\r\n     * Call by View or call manually \r\n     * Component will be remove if Component is attached\r\n    */\r\n    detach() {\r\n        if (this.isAttached) {\r\n            this.unBind();\r\n            this.removeEventHandler();\r\n            let tmpComponentEle = this.componentElement;\r\n            tmpComponentEle.parentNode.removeChild(tmpComponentEle);\r\n            this.isAttached = false;\r\n            this.dispatchEvent(EventUtils.DETACHED_EVENT);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh Component data and model and event listners\r\n     * Overrides by SubClass\r\n     */\r\n    refresh() {}\r\n\r\n    /**\r\n     * Overrides by SubClass\r\n     * Destroy Method used to cleanup component resources\r\n     * Call by View or call manually to destroy view\r\n     * Remove Event Handlers, Make Properties null, \r\n     * Remove DOM Element contents and its reference.\r\n     **/\r\n    destroy() {}\r\n\r\n}\r\n\r\nexport default Component;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport EventDispatcher from \"../../createjs/EventDispatcher\";\r\nimport EventUtils from '../utils/EventUtils';\r\nimport ElementUtils from '../utils/ElementUtils';\r\n\r\n/**\r\n *\r\n * Container\r\n * @extends {EventDispatcher}\r\n */\r\nclass Container extends EventDispatcher {\r\n\r\n    /**\r\n     * @description Container contains vyanjs Components\r\n     * @param {string} [_id=null]\r\n     * @param {string} [_parentViewId=null]\r\n     * @param {boolean} [_createDOMElement=true]\r\n     * @memberof Container\r\n     */\r\n    constructor(_id = null, _parentViewId = null, _createDOMElement = true) {\r\n        super();\r\n        this.isEnabled= false;\r\n        this.createDOMElement = _createDOMElement;\r\n        this.id = _id;\r\n        if((_id == null)|| (_id == \"\"))\r\n            this.id = ElementUtils.generateContainerId();\r\n        this.parentViewId = _parentViewId;\r\n    }\r\n    \r\n    /**\r\n     *\r\n     * @override\r\n     * @memberof Container\r\n     */\r\n    initContainer(){\r\n        \r\n    }\r\n    \r\n    /**\r\n     *\r\n     * @description Call by View or Parent\r\n     * @public\r\n     * @memberof Container\r\n     */\r\n    init() {\r\n\t\tthis.initContainer();\r\n\t}\r\n\r\n    /**\r\n     * @description Call by attach Method\r\n     * @override\r\n     * @memberof Container\r\n     */\r\n    createDOMContent() {\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description Get Container HTML Content\r\n     * @readonly\r\n     * @memberof Container\r\n     */\r\n    get containerElement() {\r\n        let tmpContainerEl = null;\r\n        if (this.isAttached) {\r\n            tmpContainerEl = ElementUtils.container(this.id,this.parentViewId);\r\n        }\r\n        return tmpContainerEl;\r\n    }\r\n   \r\n\r\n    /**\r\n     *\r\n     * @description Returns Parent ViewID\r\n     * @readonly\r\n     * @memberof Container\r\n     */\r\n    get parent(){\r\n        return this._parentViewId;\r\n    }\r\n\r\n\r\n    /**\r\n     * @description Returns true if Container is enabled\r\n     * @returns {Boolean} \r\n     * @readonly \r\n     * @memberof Container\r\n     */\r\n    get enabled() {\r\n        return this.isEnabled;\r\n    }\r\n\r\n\r\n    set enabled(_isenabled = false){\r\n        this.isEnabled = _isenabled;\r\n    }\r\n\r\n    /**\r\n     * Boolean Property , returns True if Component is Visible\r\n     * @returns {Boolean} true if Container is visible\r\n     * @memberof Container\r\n     */\r\n    get visible(){\r\n        let tmpContainerEl = this.containerElement;\r\n        return ElementUtils.isVisible(tmpContainerEl);\r\n    }\r\n\r\n\r\n    set visible(_visible){\r\n        let tmpContainerEl = this.containerElement;\r\n        if(_visible)\r\n            ElementUtils.showElement(tmpContainerEl);\r\n        else \r\n            ElementUtils.hideElement(tmpContainerEl);\r\n\r\n    }\r\n\r\n     // \r\n\r\n     /**\r\n      * @description\r\n      * Container Lifecycle Method,\r\n      * Call by View or manually \r\n      * \r\n      * attachView Responsible to render view content, listners etc,\r\n      * \r\n      * Dispatch \"ATTACHED_EVENT\" when view got attached / rendered\r\n      * @memberof Container\r\n      */\r\n     attach() {\r\n        if (!this.isAttached) {\r\n                parentEl = ElementUtils.view(this._parentViewId);\r\n            if(this.createDOMElement == true){\r\n                parentEl.insertAdjacentHTML('beforeend', ElementUtils.constructContainerBaseElement(this.id));\r\n                let tmpEle = this.element;\r\n                ElementUtils.hideElement(tmpEle);\r\n                //Create  Contents and Internal Components\r\n                this.createDOMContent();\r\n            }\r\n            this.enabled = true;\r\n            this.visible = true;\r\n            this.isAttached = true;\r\n            this.dispatchEvent(EventUtils.ATTACHED_EVENT);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @description\r\n     * Container Lifecycle Method\r\n     * \r\n     * Call by View or Manually\r\n     * \r\n     * Container will be remove if View is attached \r\n     * @public\r\n     * @memberof Container  \r\n    */\r\n    detach() {\r\n        if (this.isAttached) {\r\n            let tmpContainerEl = this.componentElement;\r\n            tmpContainerEl.parentNode.removeChild(tmpContainerEl);\r\n            this.isAttached = false;\r\n            this.dispatchEvent(EventUtils.DETACHED_EVENT);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description Call by View\r\n     * @override\r\n     * @memberof Container\r\n     */\r\n    refresh() {\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description Call by View\r\n     * @override\r\n     * @memberof Container\r\n     */\r\n    destroy() {\r\n        //TODO\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default Container;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n/**\r\n *\r\n *\r\n * @class ClassError\r\n * @extends Error\r\n */\r\nclass ClassError extends Error {\r\n    constructor(_type = 'Class', ...params) {\r\n        // Pass remaining arguments (including vendor specific ones) to parent constructor\r\n        super(...params);\r\n\r\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ClassError);\r\n        }\r\n\r\n        // Custom debugging information\r\n        this.type = _type;\r\n        this.date = new Date();\r\n    }\r\n}\r\n\r\nexport default ClassError;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nimport EventDispatcher from \"../../createjs/EventDispatcher\";\r\nimport ElementUtils from \"../utils/ElementUtils\";\r\n\r\n\r\n/**\r\n *\r\n *\r\n * ViewStack\r\n * @extends {EventDispatcher}\r\n */\r\nclass ViewStack extends EventDispatcher {\r\n\r\n\r\n    /**\r\n     * ViewStack maintains history of Views.\r\n     * @param {string} _id - ViewStack ID\r\n     * @param {string} _route - Path Route Name\r\n     * @param {string} _parentId - ViewStack ParentID\r\n     * @memberof ViewStack\r\n     */\r\n    constructor(_id, _route, _parentId) {\r\n        super();\r\n        this.id = _id;\r\n        this.route = _route;\r\n        this.parentId = _parentId;\r\n        this.viewStack = [];\r\n        this.isRendered = false;\r\n        this.initViewStack();\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Initialize ViewStack , Implement by Subclass\r\n     * @override\r\n     * @memberof ViewStack\r\n     */\r\n    initViewStack() {\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Push View in Viewstack\r\n     * @param {string} _viewId\r\n     * @param {array} _views\r\n     * @memberof ViewStack\r\n     */\r\n    pushViewElement(_viewId, _views) {\r\n\r\n        for (let viewObj in _views) {\r\n            let tmpview = _views[viewObj];\r\n            if (tmpview.isActive) {\r\n                tmpview.deActivateView();\r\n            }\r\n        }\r\n        this.viewStack.push(_viewId);\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * @description \r\n     * Navigator will call view destroy method which will remove \r\n     * View DOM Element, EventListners reference to DOM Element,\r\n     * Properties, Finally Object null to make garbage collected\r\n     * @memberof ViewStack\r\n     */\r\n    popViewElement() {\r\n        this.viewStack.pop();\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Returns Active View Id \r\n     * @returns {string} ViewID\r\n     * @memberof ViewStack\r\n     */\r\n    getActiveViewId() {\r\n        if (this.viewStack.length > 0)\r\n            return this.viewStack[this.viewStack.length - 1];\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Returns Viewstack DOMElement\r\n     * @public\r\n     * @returns {string} DOM ELement\r\n     * @memberof ViewStack\r\n     */\r\n    getViewStackElement() {\r\n        let el = null;\r\n        if (this.isRendered) {\r\n            el = this.getViewStackRootElement();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    \r\n    /**\r\n     *  \r\n     * @description Returns Viewstack Root DOMElement\r\n     * @override\r\n     * @private \r\n     * @returns {string} DOM Element\r\n     * @memberof ViewStack\r\n     */\r\n    getViewStackRootElement() {\r\n        return ElementUtils.viewStack(this.id);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Render ViewStack DOMElement contents\r\n     * @public\r\n     * @memberof ViewStack\r\n     */\r\n    render() {\r\n        if (!this.isRendered) {\r\n            this.renderViewStack();\r\n            this.renderViewStackContent();\r\n            this.isRendered = true;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Render ViewStack DOMElement \r\n     * Called by Render method\r\n     * @private\r\n     * @memberof ViewStack\r\n     */\r\n    renderViewStack() {\r\n        let tmpParentNavigatorEl = ElementUtils.viewNavigator(this.parentId);\r\n        let tmpViewStackEl = ElementUtils.constructViewStackBaseElement(this.id);\r\n        tmpParentNavigatorEl.insertAdjacentHTML('beforeend', tmpViewStackEl);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @override\r\n     * @memberof ViewStack\r\n     */\r\n    renderViewStackContent() {}\r\n\r\n    \r\n    /**\r\n     * \r\n     * @description \r\n     * Destroy Method used to cleanup viewstack resources\r\n     * Call by ViewNavigator to destroy view\r\n     * Remove Event Handlers, Make Properties null, \r\n     * Remove View Components and its reference.\r\n     * @override\r\n     * @public\r\n     * @memberof ViewStack\r\n     */\r\n    destroy() {\r\n        this.route = null;\r\n        this.viewStack = [];\r\n        this.isRendered = false;\r\n        let tmpParentNavigatorEl = ElementUtils.viewNavigator(this.parentId);\r\n        let tmpViewStackEl = ElementUtils.viewStack(this.id);\r\n        tmpParentNavigatorEl.removeChild(tmpViewStackEl);\r\n        this.parentId = null;\r\n        this.id = null;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ViewStack;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nimport EventDispatcher from \"../../createjs/EventDispatcher\";\r\nimport ElementUtils from '../utils/ElementUtils';\r\nimport ViewStack from './ViewStack';\r\nimport View from './View';\r\nimport EventRouter from './EventRouter';\r\n\r\n/**\r\n * \r\n * ViewNavigator\r\n * @extends {EventDispatcher}\r\n */\r\nclass ViewNavigator extends EventDispatcher {\r\n\r\n    /**\r\n     * @description\r\n     * UI navigation  manages by ViewNavigator. \r\n     * \r\n     * ViewNavigator\" is base class which have simple view navigation functionality.\r\n     * \r\n     * ViewNavigator manages set of view using stack-based history mechanism which also called as ViewStack.\r\n     * \r\n     * Each Viewstack represent its own view history stack. So vyanjs supports multiple history stack too.\r\n     * \r\n     * ViewNavigator also Manages LifeCycle of View.\r\n     *\r\n     * @param {String} _id - ViewNavigator ID\r\n     * @param {String} _parentId - Parent ID View or \"root\" DOM Element\r\n     * @param {String} _parentContainerId - Parent Container ID\r\n     * @todo {Boolean} navigationHistory - Enable or Disable Navigation History. \r\n     * If true ViewNavigator will keep View History.\r\n     * @memberof ViewNavigator\r\n     */\r\n    constructor(_id, _parentId = null,_parentContainerId = null) {\r\n        super();\r\n        this.id = _id;\r\n        // HTML ID attribute only \r\n        this.parentId = _parentId;\r\n        this.parentContId = _parentContainerId;\r\n        this.activeViewId = null;\r\n        this.activeViewStackId = null;\r\n        this.activeRoute = null;\r\n        this.views = {};\r\n        this.viewstacks = {};\r\n        this.eventRoute = new EventRouter();\r\n        this.isRendered = false;\r\n        this.navigationHistory = true;\r\n        this.initNavigator();\r\n    }\r\n\r\n    /**\r\n     * @description Implemented by Subclass \r\n     * Call by ViewNavigator Constructor\r\n     * @override\r\n     * @memberof ViewNavigator\r\n     */\r\n    initNavigator() {\r\n\r\n    }\r\n\r\n    /**\r\n     * Sets Navigation History \r\n     * Boolean Property , returns True if Component is Enabled\r\n     */\r\n    get history() {\r\n        return this.navigationHistory;\r\n    }\r\n\r\n    set history(_navigationHistory = true){\r\n        this.navigationHistory = _navigationHistory;\r\n    }\r\n\r\n    get parentContainer() {\r\n        return this.parentContId;\r\n    }\r\n\r\n    /**\r\n     * @description Set EventRouter for ViewNavigator, EventRouter is useful for EventBased Navigation and for navigation of single view or multiple views.\r\n     * @param {Object} _router - EventRouter\r\n     * @memberof ViewNavigator\r\n     */\r\n    set eventRouter(_router) {\r\n        if (!_router instanceof EventRouter) {\r\n            throw new ClassError(\"ViewNavigator\", \"Wrong Type of Router\");\r\n        }\r\n        this.eventRoute = _router;\r\n    }\r\n\r\n    /**\r\n     * @description Returns EventRouter instance of ViewNavigator\r\n     * @returns {object} - EventRouter Instance\r\n     * @readonly\r\n     * @memberof ViewNavigator\r\n     */\r\n    get eventRouter() {\r\n        return this.eventRoute;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @description \r\n     * By Default View class will be created\r\n     * When Overrides by Subclass , custom Views will be created\r\n     * @override\r\n     * @param {String} _viewId - View ID\r\n     * @param {String} _route - Navigation Route / Path \r\n     * @param {String} _navparams - Navigation Parameters pass to View\r\n     * @param {String} _viewStackId - Parent Viewstack ID of View\r\n     * @returns {Object} - View Instance\r\n     * @memberof ViewNavigator\r\n     */\r\n    createView(_viewId, _route, _navparams, _viewStackId) {\r\n        return new View(_viewId, _route, _navparams, _viewStackId);\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * By Default ViewStack class will be created\r\n     * When Overrides by Subclass , custom Viewstack will be created \r\n     * @override\r\n     * @param {String} _viewStackId - ViewStack ID\r\n     * @param {String} _route - Navigation Route / Path \r\n     * @param {String} _parentId - Parent ViewNavigator ID\r\n     * @returns {Object} - ViewStack Instance\r\n     * @memberof ViewNavigator\r\n     */\r\n    createViewStack(_viewStackId, _route, _parentId) {\r\n        return new ViewStack(_viewStackId, _route, _parentId);\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * Call by ViewManager\r\n     * Navigation Route and Navigation EventRoute Combination must be unique\r\n     * @param {String} _route - Navigation Route\r\n     * @param {String} _navevent - Navigation Event Route \r\n     * @param {String} _navparams - Parameters pass to View\r\n     * @memberof ViewNavigator\r\n     */\r\n    navigate(_route, _navevent, _navparams) {\r\n        let tmpviewStackId = null;\r\n        if (this.navigationHistory == false) {\r\n            this.navigateBack(_route);\r\n        }\r\n\r\n        tmpviewStackId = this.eventRoute.findViewStackId(_navevent, _route);\r\n        let tmpViewStack = this.getViewStack(tmpviewStackId);\r\n        if (tmpViewStack == null)\r\n            tmpViewStack = this.createViewStack(tmpviewStackId, _route, this.id);\r\n\r\n        // Viewstack have _parentId\r\n\r\n        tmpViewStack.render(); // will construct Element and add it to DOM parent\r\n        this.activeViewStackId = tmpviewStackId;\r\n        this.viewstacks[tmpviewStackId] = tmpViewStack;\r\n\r\n        let tmpviewId = this.eventRoute.findViewId(_navevent, _route);\r\n        let tmpView = this.getView(tmpviewId);\r\n        if (tmpView == null)\r\n            tmpView = this.createView(tmpviewId, _route, _navevent, _navparams, tmpviewStackId);\r\n        this.removeActiveMenuElement();\r\n        let tmpViewStackEl = tmpViewStack.getViewStackElement();\r\n        this.activeViewId = tmpviewId;\r\n        this.views[tmpviewId] = tmpView;\r\n        this.activeRoute = _route;\r\n        tmpView.attachView(tmpViewStackEl); // will construct Element and add it to DOM parent\r\n        tmpViewStack.pushViewElement(tmpviewId, this.views);\r\n        tmpView.activateView();\r\n        this.setActiveMenuElement(_navevent);\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * Call by ViewManager or ViewNavigator internally\r\n     * Navigate back to previous View if history set to true\r\n     * @param {String} _route\r\n     * @memberof ViewNavigator \r\n     */\r\n    navigateBack(_route) {\r\n        if (_route == this.activeRoute) {\r\n            let tmpViewStack = this.getViewStack(this.activeViewStackId);\r\n            tmpViewStack.popViewElement();\r\n            let tmpView = this.views[this.activeViewId];\r\n            tmpView.deActivateView();\r\n            tmpView.detachView();\r\n            tmpView.destroy();\r\n            this.removeActiveMenuElement();\r\n            tmpView = null; // make garbage collected\r\n            this.views[this.activeViewId] = null;\r\n            delete this.views[this.activeViewId];\r\n            if (this.navigationHistory == true) {\r\n                this.activeViewId = tmpViewStack.getActiveViewId();\r\n                let tmpViewBack = this.views[this.activeViewId];\r\n                tmpViewBack.activateView();\r\n                let tmpNavEvent = this.views[this.activeViewId].navEvent;\r\n                this.setActiveMenuElement(tmpNavEvent);\r\n                this.activeRoute = this.views[this.activeViewId].route;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description Navigate Back to Specific View\r\n     * @param {String} _viewId - View ID\r\n     * @todo To be Implemented\r\n     * @memberof ViewNavigator\r\n     */\r\n    navigateBackToView(_viewId) {\r\n\r\n    }\r\n\r\n    /**\r\n     * @description Navigate to Specific View\r\n     * @param {String} _viewId - View ID\r\n     * @todo To be Implemented\r\n     * @memberof ViewNavigator\r\n     */\r\n    navigateToView(_viewId) {\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description This method will be implemented by Subclass\r\n     * @memberof ViewNavigator\r\n     */\r\n    removeActiveMenuElement(){\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description This method will be implemented by Subclass\r\n     * @param {string} _navEvent - Navigation Event Name\r\n     * @memberof ViewNavigator\r\n     */\r\n    setActiveMenuElement(_navEvent){\r\n\r\n    }\r\n\r\n    /**\r\n     * @description Get ViewStack Object by ViewStackId\r\n     * @param {String} _viewStackId - ViewStackID\r\n     * @returns {Object} - ViewStack Instance\r\n     * @memberof ViewNavigator\r\n     */\r\n    getViewStack(_viewStackId) {\r\n        let tmpVstack = null;\r\n        tmpVstack = this.viewstacks[_viewStackId];\r\n        return tmpVstack;\r\n    }\r\n\r\n    /**\r\n     * @description Get ViewObject by ViewId\r\n     * @param {string} _viewId - ViewID\r\n     * @returns {Object} - View Instance\r\n     * @memberof ViewNavigator\r\n     */\r\n    getView(_viewId) {\r\n        let tmpV = null;\r\n        tmpV = this.views[_viewId];\r\n        return tmpV;\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * ViewNavigator Lifecycle Method,\r\n     * Call by ViewManager,\r\n     * Render ViewNavigator DOM Content\r\n     * @public\r\n     * @memberof ViewNavigator\r\n     */\r\n    render() {\r\n        if (!this.isRendered) {\r\n            this.renderNavigator();\r\n            this.renderNavigatorContent();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description Renders, ViewNavigator DOM Element , it call by Render Method \r\n     * @private\r\n     * @memberof ViewNavigator\r\n     */\r\n    renderNavigator() {\r\n        let tmpParentId = this.parentId;\r\n        let tmpParentElement = null;\r\n        if (this.parentId != \"root\") {\r\n            tmpParentElement = ElementUtils.container(this.parentContainer,this.parentId);\r\n        } else {\r\n            tmpParentElement = document.getElementById(tmpParentId);\r\n        }\r\n        if (tmpParentElement != null) {\r\n            let tmpNavigatorEl = ElementUtils.constructNavigatorBaseElement(this.id);\r\n            tmpParentElement.insertAdjacentHTML('beforeend', tmpNavigatorEl);\r\n            this.isRendered = true;\r\n        } else {\r\n            throw new ClassError(\"ViewNavigator\", \"No Parent Element found for Navigator\");\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    /**\r\n     * @description Render Navigator Subclass DOM Element content\r\n     * @private\r\n     * @override\r\n     * @memberof ViewNavigator\r\n     */\r\n    renderNavigatorContent() {}\r\n\r\n\r\n    /**\r\n     * \r\n     * @description \r\n     * ViewNavigator Lifecycle Method,\r\n     * Call by ViewManager to destroy ViewNavigator,\r\n     * Remove Event Handlers, Make Properties null, \r\n     * Remove Views and Viewstack objects.\r\n     * Remove ViewNavigator DOM Element and Its Contents\r\n     * Remove EventRoute Object\r\n     * @public\r\n     * @memberof ViewNavigator\r\n     */\r\n    destroy() {\r\n        for (let viewObj in this.views) {\r\n            let tmpview = this.views[viewObj];\r\n            tmpview.destroy();\r\n        }\r\n        for (let viewStkObj in this.viewstacks) {\r\n            let tmpviewstk = this.viewstacks[viewStkObj];\r\n            tmpviewstk.destroy();\r\n        }\r\n\r\n\r\n        let tmpNavigatorEl = ElementUtils.viewNavigator(this.id);\r\n        tmpNavigatorEl.parentNode.removeChild(tmpNavigatorEl);\r\n\r\n        this.views = null;\r\n        this.viewstacks = null;\r\n        this.parentId = null;\r\n        this.id = null;\r\n        this.parentId = null;\r\n        this.parentContId = null;\r\n        this.activeViewId = null;\r\n        this.activeViewStackId = null;\r\n        this.activeRoute = null;\r\n        this.eventRoute = null;\r\n        this.isRendered = false;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ViewNavigator;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport EventDispatcher from \"../../createjs/EventDispatcher\";\r\nimport ClassError from '../utils/ClassError';\r\nimport Router from './Router';\r\nimport ViewNavigator from './ViewNavigator';\r\nimport EventBroadCaster from '../events/EventBroadcaster';\r\nimport EventUtils from '../utils/EventUtils';\r\n\r\n/**\r\n *\r\n * ViewManager\r\n * @extends {EventDispatcher}\r\n */\r\nclass ViewManager extends EventDispatcher {\r\n\r\n\r\n    /**\r\n     * @description ViewManager manages ViewNavigator.It Subscribe to EventBroadcaster's Navigation channel to receive navigation change events.\r\n     * ViewManager find ViewNavigator based on Path Routes data and it match route info received in navigation change event.\r\n     * \r\n     * @memberof ViewManager\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.preinitialize();\r\n        this.initialize();\r\n    }\r\n\r\n\r\n    /**\r\n     * @description preinitialize navigators,router etc.\r\n     * @private\r\n     * @memberof ViewManager\r\n     */\r\n    preinitialize() {\r\n        \r\n        this.router = new Router();\r\n        this.rootId = \"root\";\r\n\r\n        this.navigators = {};\r\n        this.currentRouteNavArray = [];\r\n        this.currentRoute = null;\r\n\r\n        EventBroadCaster.navEventChannel.addEventListener(EventUtils.NAV_CHANGE_EVENT, event => { this.handleNavChangeEvent(event); });\r\n    }\r\n\r\n    /**\r\n     * @description Implement by subclass to initialise \r\n     * @override\r\n     * @public\r\n     * @memberof ViewManager\r\n     */\r\n    initialize() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * Viewmanager find Viewnavigator based on Routes info set in Router Object\r\n     * \r\n     * @example Sample Router Object is \r\n     * [\r\n     *      { path: \"/path1\", navigatorId: \"Navigator1\",parentId: \"root\" },\r\n     *      { path: \"/path2\", navigatorId: \"Navigator2\",parentId: \"root\" },\r\n     *  ]\r\n     * \r\n     * @description Here path is routeID, navigatorID is viewNavigatorId, \r\n     * parentId is DOM Element Id or ViewId in case of Nested View Navigators\r\n     * By Default Main DOM Element have id=\"root\"\r\n     * \r\n     * @memberof ViewManager\r\n     */\r\n\r\n    set routes(_router) {\r\n        if (!_router instanceof Router) {\r\n            throw new ClassError(\"ViewManager\", \"Wrong Type of Router\");\r\n        }\r\n        this.router = _router;\r\n    }\r\n\r\n\r\n    get routes() {\r\n        return this.router;\r\n    }\r\n\r\n    /**\r\n     * @description ViewManager calls createNavigator method when ViewNavigator is not created yet. \r\n     * @param {string} _navigatorId - ViewNavigatorId\r\n     * @param {string} _parentId - ParentId is DOM Element id or ViewID\r\n     * @param {string} _parentConId - ParentContainerID used in case of NestedNavigator\r\n     * @returns {Object} - New Instance of ViewNavigator\r\n     * @memberof ViewManager\r\n     */\r\n    createNavigator(_navigatorId, _parentId,_parentConId) {\r\n        return new ViewNavigator(_navigatorId, _parentId,_parentConId);\r\n    }\r\n\r\n    /**\r\n     * @description ViewManager maintains navigators object in Key, Value form.\r\n     * Where key is viewNavigatorID and value is ViewNavigator Object Instance\r\n     * @param {Object} _navigator - ViewNavigator\r\n     * @param {string} _navigatorId - ViewNavigatorID\r\n     * @memberof ViewManager\r\n     */\r\n    addNavigator(_navigator, _navigatorId) {\r\n        this.navigators[_navigatorId] = _navigator;\r\n        //this.currentNavigatorIds.push(_navigatorId);\r\n    }\r\n\r\n\r\n    addNavIdRoute(_route, _navigatorId) {\r\n        //let newNavRoute = {route:\"/path2\",navId:\"Navigator2\"};\r\n        let newNavRoute = {route:_route,navId:_navigatorId};\r\n        this.currentRouteNavArray.push(newNavRoute);\r\n    }\r\n\r\n    /**\r\n     * @returns {Object} - ViewNavigator Object Instance by ViewNavigatorId.\r\n     * @param {string} _navigatorId - ViewNavigatorID\r\n     * @memberof ViewManager\r\n     */\r\n    getNavigator(_navigatorId) {\r\n        let tmpnavNav = null;\r\n        if (this.navigators[_navigatorId] != null)\r\n            tmpnavNav = this.navigators[_navigatorId];\r\n        return tmpnavNav;\r\n    }\r\n\r\n    /**\r\n     * @returns {Array} - NavigatorID Array \r\n     * @param {string} _route - Path Route Name\r\n     * @memberof ViewManager \r\n     */\r\n    findRouteNavigator(_route) {\r\n        let tmpNavigatorIds = this.router.findNavigator(_route);\r\n        return tmpNavigatorIds;\r\n    }\r\n\r\n    /**\r\n     * @returns {string} - ParentID of ViewNavigator \r\n     * @param {string} _navigatorId - ViewNavigatorID\r\n     * @memberof ViewManager\r\n     */\r\n    getNavigatorParent(_navigatorId) {\r\n        let tmpNavParentId = this.router.findNavigatorParent(_navigatorId);\r\n        return tmpNavParentId;\r\n    }\r\n\r\n    /**\r\n     * @returns {string} - ParentID of ViewNavigator \r\n     * @param {string} _navigatorId - ViewNavigatorID\r\n     * @memberof ViewManager\r\n     */\r\n    getParentNavContainer(_route,_navParentViewId) {\r\n        // { path: \"/path9/path8\", navigatorId: \"Navigator4\",parentId: \"p9view1\" },\r\n        let tmpParentNavContrEl = this.rootId;\r\n        if(_navParentViewId != this.rootId){\r\n            let tmpNewRouteArray = _route.split(\"/\");\r\n            tmpNewRouteArray.shift();\r\n            tmpNewRouteArray.splice(tmpNewRouteArray.length-1, 1);\r\n\r\n            let tmpparentRouteArray = [];\r\n            for(let y=0;y < tmpNewRouteArray.length;y++){\r\n                tmpparentRouteArray[y] = \"/\"+tmpNewRouteArray[y];\r\n            }\r\n            let tmpParentRouteId = tmpparentRouteArray.toString();\r\n            let tmpParentNavId = null;\r\n                    for(let z= 0; z < this.currentRouteNavArray.length;z++){\r\n                        let tmpRouteId = this.currentRouteNavArray[z].route;\r\n                        if(tmpRouteId == tmpParentRouteId){\r\n                            tmpParentNavId = this.currentRouteNavArray[z].navId;\r\n                        }\r\n                    }\r\n            let tmpParentNav = this.navigators[tmpParentNavId];\r\n            let tmpParentNavView = tmpParentNav.getView(_navParentViewId);\r\n            tmpParentNavContrEl = tmpParentNavView.getNavContainerId();\r\n        }\r\n        return tmpParentNavContrEl;\r\n    }\r\n\r\n    handleNavChangeEvent(e) {\r\n        let tmpRoute = e.route;\r\n        let tmpNavEvtName = e.eventName;\r\n        let tmpNavparams = e.params;\r\n        this.changeNavigation(tmpRoute,tmpNavEvtName,tmpNavparams);    \r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * changeNavigation method called when ViewManager Receive Forward Navigation Event\r\n     * @private\r\n     * @param {String} _route - Navigation Route / Path \r\n     * @param {Event} _navevent - Navigation Event\r\n     * @param {Object} _navparams - Navigation Parameters pass to ViewNavigator\r\n     * @memberof ViewManager\r\n     */\r\n    changeNavigation(_route, _naveventname, _navparams) {\r\n        let newRoute = _route;\r\n        let navigatorIds = this.findRouteNavigator(_route);\r\n        if (_naveventname == EventUtils.BACK_NAV_EVENT) {\r\n            // No Need to destroy / hide navigator assuming its same navigator\r\n            this.changeBackNavigation(navigatorIds, _route);\r\n        } else {\r\n\r\n            // 1) FirstTime load /path1\r\n            if((this.currentRoute == null)&&(this.currentRouteNavArray.length == 0)){\r\n                this.currentRoute = newRoute;\r\n                this.changeForwardNavigation(navigatorIds, newRoute, _naveventname, _navparams);\r\n            } else{\r\n                let tmpResultArray = this.chkNewRouteHaveCurrentRoute(newRoute);\r\n                if((this.currentRoute != newRoute)&& (tmpResultArray.length == 0)){\r\n                    let unusedNavIds = [];\r\n                    let tmpRouteAryLength = this.currentRouteNavArray.length -1;\r\n                    for(let i=tmpRouteAryLength; i >= 0 ;i--){\r\n                        unusedNavIds.push(this.currentRouteNavArray[i].navId);\r\n                    }\r\n                    this.destroyUnusedNavigators(unusedNavIds);\r\n                    this.currentRouteNavArray = [];\r\n                    this.currentRoute = newRoute;\r\n                    this.changeForwardNavigation(navigatorIds, newRoute, _naveventname, _navparams);\r\n                    \r\n                } else {\r\n                    //((this.currentRoute != newRoute)&& (tmpResultArray.length > 0))\r\n                    //((this.currentRoute == newRoute)&& (tmpResultArray.length > 0))\r\n                    this.chkAndDestroyNestedNavs(newRoute);\r\n                    this.currentRoute = newRoute;\r\n                        this.changeForwardNavigation(navigatorIds, newRoute, _naveventname, _navparams);\r\n                }\r\n            } \r\n        } \r\n    }\r\n\r\n    \r\n    chkNewRouteHaveCurrentRoute(_newRoute){\r\n        let tmpNewRouteArray = _newRoute.split(\"/\");\r\n        tmpNewRouteArray.shift();\r\n        let tmpCurrRouteArray = this.currentRoute.split(\"/\");\r\n        tmpCurrRouteArray.shift();\r\n        let tmpResultArray = tmpCurrRouteArray.filter(x => tmpNewRouteArray.includes(x));\r\n        return tmpResultArray;\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * changeBackNavigation change from current view to one previous view of viewstack by calling navigateBack method of multiple ViewNavigators associated same path route.\r\n     * @private\r\n     * @param {Array} _navigatorIds - Array of ViewNavigators.\r\n     * @param {String} _route - Path route\r\n     * @memberof ViewManager\r\n     */\r\n    changeBackNavigation(_navigatorIds, _route) {\r\n        if (_navigatorIds.length > 0) {\r\n            for (let j = 0; j < _navigatorIds.length; j++) {\r\n                let tmpNavId = _navigatorIds[j];\r\n                let tmpNavigator = this.getNavigator(tmpNavId);\r\n                if(tmpNavigator.history == true){\r\n                    tmpNavigator.navigateBack(_route);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * changeForwardNavigation method called when ViewManager Receive Forward Navigation Event\r\n     * @private\r\n     * @param {Array} _navigatorIds - NavigatorId Array\r\n     * @param {String} _route - Navigation Route / Path \r\n     * @param {Event} _navevent - Navigation Event\r\n     * @param {Object} _navparams - Navigation Parameters pass to ViewNavigator\r\n     * @memberof ViewManager\r\n     */\r\n    changeForwardNavigation(_navigatorIds, _route, _navevent, _navparams) {\r\n        //this.checkAndDestroyNavigators(_navigatorIds, _route);\r\n        if (_navigatorIds.length > 0) {\r\n            for (let k = 0; k < _navigatorIds.length; k++) {\r\n                let tmpNavid = _navigatorIds[k];\r\n                let tmpNavigator = this.getNavigator(tmpNavid);\r\n                if (tmpNavigator == null) {\r\n                    // Add code here to find parent of Navigator.\r\n                    let tmpNavParentId = this.getNavigatorParent(tmpNavid);\r\n                    let tmpNavParentConId = this.getParentNavContainer(_route,tmpNavParentId);\r\n                    tmpNavigator = this.createNavigator(tmpNavid, tmpNavParentId,tmpNavParentConId);\r\n                    this.addNavigator(tmpNavigator, tmpNavid);\r\n                    this.addNavIdRoute(_route,tmpNavid);\r\n                    tmpNavigator.render();\r\n                    /* createNavigator will call internally addNavigator to save created navigator */\r\n                    // tmpNavigator.addEventListner(\"changeNavEvent\",onNavChangeEvent); \r\n                }\r\n                tmpNavigator.navigate(_route, _navevent, _navparams);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    chkAndDestroyNestedNavs(_route) {\r\n        // Find Navigators Ids with current active route\r\n        let tmpCurrNavIds = this.findRouteNavigator(_route);\r\n        let tmpCurrViewIds = [];\r\n        let tmpNestNavIds = [];\r\n\r\n        // Chk Active route Navigators have history false\r\n        // If History false then get its ViewId\r\n        if (tmpCurrNavIds.length > 0) {\r\n            for (let x = 0; x < tmpCurrNavIds.length; x++) {\r\n                let tmpCurrNavId = tmpCurrNavIds[x];\r\n                if(this.navigators[tmpCurrNavId] != null)  {\r\n                    let tmpViewId = this.navigators[tmpCurrNavId].activeViewId;\r\n                    if(this.navigators[tmpCurrNavId].history == false){\r\n                        tmpCurrViewIds.push(tmpViewId);\r\n                    }\r\n                } \r\n            }\r\n        }\r\n\r\n        // Find Navigators who have Active ViewId as Parent\r\n        if (tmpCurrViewIds.length > 0) {\r\n            for (let y = 0; y < tmpCurrViewIds.length; y++) {\r\n                let tmpViwId = tmpCurrViewIds[y];\r\n                let tmpNestNavId = this.chkViewAsNavigatorParent(tmpViwId);\r\n                if(tmpNestNavId != null){\r\n                    tmpNestNavIds.push(tmpNestNavId);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Destory Navigators who have Active ViewId as Parent\r\n        if(tmpNestNavIds.length > 0){\r\n            this.destroyUnusedNavigators(tmpNestNavIds);\r\n            this.delNavFromCurrRouteArr(tmpNestNavIds);\r\n        }\r\n\r\n    }\r\n\r\n    delNavFromCurrRouteArr(_tmpNavIds){\r\n        let p = _tmpNavIds.length;\r\n        while(p >= 0){\r\n            for(let n= 0; n < this.currentRouteNavArray.length;n++){\r\n                let tmpRouteNavId = this.currentRouteNavArray[n].navId;\r\n                if(tmpRouteNavId == _tmpNavIds[p]){\r\n                    this.currentRouteNavArray.splice(n, 1); \r\n                }\r\n            }\r\n            p--;\r\n        }\r\n\r\n    }\r\n    \r\n    chkViewAsNavigatorParent(_viewId) {\r\n        let tmpNavId = null;\r\n        for( let nav in this.navigators){\r\n            if(this.navigators[nav] != null){\r\n                let tmpParentId = this.navigators[nav].parentId;\r\n                if ((tmpParentId != null) && (tmpParentId == _viewId)){\r\n                    tmpNavId = this.navigators[nav].id;\r\n                } \r\n            } \r\n        }\r\n        return tmpNavId;\r\n    }\r\n\r\n    /**\r\n     * @description destroy unused Navigators\r\n     * @private\r\n     * @param {Array} _unusedNavigators \r\n     * @memberof ViewManager\r\n     */\r\n    destroyUnusedNavigators(_unusedNavigators) {\r\n        if (_unusedNavigators.length > 0) {\r\n            for (let p = 0; p < _unusedNavigators.length; p++) {\r\n                let tmpNavid = _unusedNavigators[p];\r\n                this.removeNavigator(tmpNavid);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description removes ViewNavigator object instance from navigators array.\r\n     * @param {String} _navigatorId - NavigatorId\r\n     * @memberof ViewManager\r\n     */\r\n    removeNavigator(_navigatorId) {\r\n        let tmpnav = this.navigators[_navigatorId];\r\n        tmpnav.destroy();\r\n        tmpnav = null;\r\n        this.navigators[_navigatorId] = null;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @todo Implment destroy method\r\n     * @memberof ViewManager\r\n     */\r\n    destroyAll() {\r\n        //TODO\r\n    }\r\n}\r\n\r\nexport default ViewManager;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nimport Event from \"../../createjs/Event\";\r\n\r\n/**\r\n * GenericEvent\r\n * @extends {Event}\r\n */\r\nclass GenericEvent extends Event {\r\n\r\n    /**\r\n     * @description Useful to dispatched Event with EventName, Params, Event Type\r\n     * @param {string} _type\r\n     * @param {string} _eventName\r\n     * @param {Object} _params\r\n     * @param {*} _bubbles\r\n     * @param {Boolean} _cancelable\r\n     * @memberof GenericEvent\r\n     */\r\n    constructor(_type, _eventName, _params, _bubbles, _cancelable ) {\r\n        super(_type, _bubbles, _cancelable);\r\n        this.type = _type;\r\n        this.eventName = _eventName;\r\n        this.params = _params;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @returns {Object) - creates and return GenericEvent Instance\r\n     * @memberof GenericEvent\r\n     */\r\n    clone() {\r\n        return new GenericEvent(this.type, this.eventName, this.params, this.bubbles, this.cancelable);\r\n    }\r\n}\r\n\r\nexport default GenericEvent;","/** \r\n * @license\r\n * Copyright (c) 2019 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\n/**\r\n * BindingUtil\r\n * \r\n * \r\n */\r\nclass BindingUtil {\r\n\r\n    /**\r\n     * @description \r\n     * BindingUtils provides One-way and Two-way binding with Just single statement.\r\n     * BindingUtils is Singleton class.\r\n     * \r\n     * @example Add Binding :\r\n    BindingUtils.addBinding(srcele, \"value\", \"change\", destele, \"value\", false);\r\n \r\n            @example Remove Binding :\r\n        BindingUtils.removeBinding(srcele, \"value\");\r\n        \r\n        @example Chain Binding :\r\n        DOM Element to JavaScript Object :\r\n        BindingUtils.addBinding(srcele, \"value\", \"change\", this.myCustomModel, \"setValue\", false);\r\n\r\n        JavaScript Object to DOM Element :\r\n        BindingUtils.addBinding(this.myCustomModel, \"getValue\", \"change\", destele, \"value\", false);\r\n        \r\n        @example Two-way Binding :\r\n        BindingUtils.addBinding(srcele, \"value\", \"change\", destele, \"value\", true);\r\n \r\n     * @memberof BindingUtil\r\n     */\r\n    constructor() {\r\n        if (!BindingUtil.instance) {\r\n            BindingUtil.instance = this;\r\n            this.BindObjDictionary = {};\r\n            this.objCounter = 0;\r\n            this.bindObjIdPrefix = \"bindobj\";\r\n        }\r\n        return BindingUtil.instance;\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {object} _srcObj - Source DOM Element or Object\r\n     * @param {string} _srcProp - Source Property\r\n     * @param {string} _evtname - Source Object EventName on which Binding Trigger \r\n     * @param {object} _targObj - Target DOM Element or Object\r\n     * @param {string} _targProp - Target Property\r\n     * @memberof BindingUtil\r\n     */\r\n    Binds(_srcObj, _srcProp, _evtname, _targObj, _targProp) {\r\n        let srcObject = new Object();\r\n        let srcPropStr = _srcProp + \"prop\";\r\n        let srcObjKey = null;\r\n        this.objCounter++;\r\n        let tmpId = this.bindObjIdPrefix+this.objCounter;\r\n        if (_srcObj.nodeName) {\r\n            \r\n            srcObjKey = tmpId;//_srcObj.id;\r\n            //TODO:: Following line will be enabled for data-id attribute\r\n            // srcObjKey = _srcObj.dataset.id;\r\n            _srcObj.dataset.bindid = srcObjKey;\r\n            this.addToBindDictionary(srcObjKey, _srcObj, _evtname);\r\n            srcObject = this.BindObjDictionary[srcObjKey];\r\n        } else {\r\n            srcObjKey = tmpId;\r\n            _srcObj.bindid = srcObjKey;\r\n            this.addToBindDictionary(srcObjKey, _srcObj, _evtname);\r\n            srcObject = this.BindObjDictionary[srcObjKey];\r\n        }\r\n\r\n        if (srcObject.srcPropArray == null) {\r\n            srcObject.srcPropArray = [];\r\n        }\r\n        if (srcObject[srcPropStr] == null) {\r\n            srcObject.srcPropArray.push(_srcProp);\r\n            srcObject[srcPropStr] = new Object();\r\n            if (typeof(_srcObj[_srcProp]) === 'function') {\r\n                srcObject[srcPropStr].value = _srcObj[_srcProp]();\r\n            } else {\r\n                srcObject[srcPropStr].value = _srcObj[_srcProp];\r\n            }\r\n\r\n        }\r\n        if (srcObject[srcPropStr].bindObjArray == null) {\r\n            srcObject[srcPropStr].bindObjArray = [];\r\n        }\r\n        let targetObject = this.getTargetObject(_targObj, _targProp);\r\n        srcObject[srcPropStr].bindObjArray.push(targetObject);\r\n        this.BindObjDictionary[srcObjKey] = srcObject;\r\n    }\r\n\r\n    addToBindDictionary(key, Obj, _evtname) {\r\n        if (this.BindObjDictionary[key] == null) {\r\n            this.BindObjDictionary[key] = Obj;\r\n        }\r\n        Obj.addEventListener(_evtname, (e) => { this.synchronise(e); });\r\n    }\r\n\r\n    \r\n    synchronise(event) {\r\n        event.preventDefault();\r\n        let srcObjfrmEvt = event.target;\r\n        let eleid;\r\n        console.info(typeof srcObjfrmEvt);\r\n        if (srcObjfrmEvt.bindid) {\r\n            eleid = srcObjfrmEvt.bindid;\r\n        } else {\r\n            eleid = srcObjfrmEvt.dataset.bindid;\r\n        }\r\n        let srcObject = this.BindObjDictionary[eleid];\r\n        let srcPropArrayLen = srcObject.srcPropArray.length;\r\n        for (let i = 0; i < srcPropArrayLen; i++) {\r\n            let tmpProp = srcObject.srcPropArray[i];\r\n            let tmpPropStr = tmpProp + \"prop\";\r\n            // compare\r\n            let tmpval;\r\n            if (typeof(srcObject[tmpProp]) === 'function') {\r\n                tmpval = srcObject[tmpProp]();\r\n            } else {\r\n                tmpval = srcObject[tmpProp];\r\n            }\r\n            if (srcObject[tmpPropStr].value != tmpval) {\r\n                this.synchroniseTargetObj(srcObject, tmpPropStr, tmpProp);\r\n                srcObject[tmpPropStr].value = srcObject[tmpProp];\r\n            }\r\n        }\r\n    }\r\n\r\n    synchroniseTargetObj(srcObject, srcPropStr, srcProp) {\r\n        let tarObjArray = srcObject[srcPropStr].bindObjArray;\r\n        let tarObjArrayLen = tarObjArray.length;\r\n        for (let j = 0; j < tarObjArrayLen; j++) {\r\n            let tarObj = tarObjArray[j];\r\n            let tmpval;\r\n            if (typeof(srcObject[srcProp]) === 'function') {\r\n                tmpval = srcObject[srcProp]();\r\n            } else {\r\n                tmpval = srcObject[srcProp];\r\n            }\r\n            let tartmpval;\r\n            if (tarObj.obj != null) {\r\n                if (typeof(tarObj.obj[tarObj.prop]) === 'function') {\r\n                    tarObj.obj[tarObj.prop](tmpval);\r\n                } else {\r\n                    tarObj.obj[tarObj.prop] = tmpval;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getTargetObject(targObj, targProp) {\r\n        let tarObject = new Object();\r\n        tarObject.obj = targObj;\r\n        tarObject.prop = targProp;\r\n        return tarObject;\r\n    }\r\n\r\n\r\n    /**\r\n     * @description - Add Binding method binds Source Object property with Target Object Property with Synchronize on SourceObject Event\r\n     * @public\r\n     * @param {object} _srcObj - Source DOM Element or Object\r\n     * @param {string} _srcProp - Source Property\r\n     * @param {string} _evtname - Source Object EventName on which Binding Trigger \r\n     * @param {object} _targObj - Target DOM Element or Object\r\n     * @param {string} _targProp - Target Property\r\n     * @param {Boolean} twoway - True when Binding is Two-way\r\n     * @example Add Binding :\r\n BindingUtils.addBinding(srcele, \"value\", \"change\", destele, \"value\", false);\r\n     * @memberof BindingUtil\r\n     */\r\n    addBinding(srcObj, srcProp, evtname, targObj, targProp, twoway) {\r\n        this.Binds(srcObj, srcProp, evtname, targObj, targProp);\r\n        if (twoway) {\r\n            this.Binds(targObj, targProp, evtname, srcObj, srcProp);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @description - Add Binding method binds Source Object property with Target Object Property with Synchronize on SourceObject Event\r\n     * @public\r\n     * @param {object} _srcObj - Source DOM Element or Object\r\n     * @param {string} _evtname - Source Object EventName on which Binding Trigger \r\n     * @example Remove Binding :\r\n BindingUtils.removeBinding(srcele, \"value\");\r\n     * @memberof BindingUtil\r\n     */\r\n    removeBinding(_srcObj, _evtname) {\r\n        // determine is it dom element or plain object\r\n        let srcObject;\r\n        if (_srcObj == null)\r\n            return;\r\n        if (_srcObj.nodeName) {\r\n            let eleid = _srcObj.dataset.bindid;\r\n            if (this.BindObjDictionary[eleid] != null) {\r\n                srcObject = this.BindObjDictionary[eleid];\r\n                this.removeListeners(srcObject);\r\n            } else {\r\n                srcObject = this.BindObjDictionary[srcObj.bindid];\r\n                this.removeListeners(srcObject);\r\n            }\r\n\r\n        } else {\r\n            if (this.BindObjDictionary[srcObj.bindid] != null) {\r\n                srcObject = this.BindObjDictionary[srcObj.bindid];\r\n                this.removeListeners(srcObject);\r\n            }\r\n        }\r\n\r\n        if (srcObject.srcPropArray.length > 0) {\r\n\r\n            let srcPropArrayLen = srcObject.srcPropArray.length;\r\n            for (let j = 0; j < srcPropArrayLen; j++) {\r\n                let srcProp = srcObject.srcPropArray[j];\r\n                let srcPropStr = srcProp + \"prop\";\r\n                srcObject[srcPropStr].bindObjArray = [];\r\n            }\r\n        }\r\n    }\r\n\r\n    removeListeners(sourceObj, evtname) {\r\n        sourceObj.removeEventListener(evtname, (e) => { this.synchronise(e); });\r\n    }\r\n\r\n}\r\n\r\nconst BindingUtilss = new BindingUtil();\r\n\r\nexport default BindingUtilss;"],"names":["Event","type","bubbles","cancelable","target","currentTarget","eventPhase","timeStamp","Date","getTime","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","event","n","hasOwnProperty","props","constructor","name","EventDispatcher","p","prototype","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","_listeners","_captureListeners","listener","useCapture","listeners","arr","push","scope","once","data","handleEvent","evt","call","remove","l","length","i","splice","eventObj","clone","e","parent","top","list","captureListeners","o","slice","EventRouter","_routes","routes","_navEvent","_viewstackId","_viewId","_path","route","navEvent","viewstackId","viewId","path","tmpRoute","x","tmpViewId","tmpViewStackId","j","console","log","Router","_navigatorId","_parentId","navigatorId","parentId","_route","tmpNavigatorIds","tmpParentId","EventUtils","EventChannel","_id","id","EventBroadCaster","instance","appEvtChannel","navEvtChannel","MessageBus","Object","freeze","NavigationEvent","_type","_eventName","_params","_bubbles","_cancelable","eventName","params","InstanceId","counter","GenInstanceId","ElementUtils","_componentId","viewEl","view","querySelector","_containerId","document","_viewStackId","_viewNavId","_el","style","display","generate","View","_navevent","_navparams","_parentViewStackId","navParams","parentViewStackId","navigatorContainerId","isAttached","isActive","initView","preventDefault","NAV_CHANGE_EVENT","BACK_NAV_EVENT","navEventChannel","_parentEl","parentEl","viewStack","insertAdjacentHTML","constructViewBaseElement","tmpEle","getViewElement","hideElement","createViewContent","addViewHandler","bindView","ATTACHED_EVENT","tmpViewEl","showElement","unBindView","removeViewHandler","tmpViewEle","parentNode","removeChild","DETACHED_EVENT","_tmpViewContentEl","tmpViewElement","ElementState","Component","_parentViewId","_parentContainerId","_createDOMElement","isEnabled","elState","DEFAULT","isRequired","isReadOnly","createDOMElement","formId","generateComponentId","parentViewId","parentContainerId","initComponent","_tmpCompContentEl","tmpCompElement","componentElement","_state","changeComponentState","container","constructComponentBaseElement","createDOMContent","addEventHandler","bind","enabled","visible","unBind","removeEventHandler","tmpComponentEle","tmpComponentEl","component","_isRequired","setComponentRequired","_isReadOnly","changeState","READONLY","setComponentReadOnly","_isenabled","setComponentEnabled","isVisible","_visible","Container","generateContainerId","initContainer","constructContainerBaseElement","element","tmpContainerEl","containerElement","ClassError","Error","captureStackTrace","date","ViewStack","isRendered","initViewStack","_views","viewObj","tmpview","deActivateView","pop","el","getViewStackRootElement","renderViewStack","renderViewStackContent","tmpParentNavigatorEl","viewNavigator","tmpViewStackEl","constructViewStackBaseElement","ViewNavigator","parentContId","activeViewId","activeViewStackId","activeRoute","views","viewstacks","eventRoute","navigationHistory","initNavigator","tmpviewStackId","navigateBack","findViewStackId","tmpViewStack","getViewStack","createViewStack","render","tmpviewId","findViewId","tmpView","getView","createView","removeActiveMenuElement","getViewStackElement","attachView","pushViewElement","activateView","setActiveMenuElement","popViewElement","detachView","destroy","getActiveViewId","tmpViewBack","tmpNavEvent","tmpVstack","tmpV","renderNavigator","renderNavigatorContent","tmpParentElement","parentContainer","getElementById","tmpNavigatorEl","constructNavigatorBaseElement","viewStkObj","tmpviewstk","_navigationHistory","_router","ViewManager","preinitialize","initialize","router","rootId","navigators","currentRouteNavArray","currentRoute","handleNavChangeEvent","_parentConId","_navigator","newNavRoute","navId","tmpnavNav","findNavigator","tmpNavParentId","findNavigatorParent","_navParentViewId","tmpParentNavContrEl","tmpNewRouteArray","split","shift","tmpparentRouteArray","y","tmpParentRouteId","toString","tmpParentNavId","z","tmpRouteId","tmpParentNav","tmpParentNavView","getNavContainerId","tmpNavEvtName","tmpNavparams","changeNavigation","_naveventname","newRoute","navigatorIds","findRouteNavigator","changeBackNavigation","changeForwardNavigation","tmpResultArray","chkNewRouteHaveCurrentRoute","unusedNavIds","tmpRouteAryLength","destroyUnusedNavigators","chkAndDestroyNestedNavs","_newRoute","tmpCurrRouteArray","filter","includes","_navigatorIds","tmpNavId","tmpNavigator","getNavigator","history","k","tmpNavid","getNavigatorParent","tmpNavParentConId","getParentNavContainer","createNavigator","addNavigator","addNavIdRoute","navigate","tmpCurrNavIds","tmpCurrViewIds","tmpNestNavIds","tmpCurrNavId","tmpViwId","tmpNestNavId","chkViewAsNavigatorParent","delNavFromCurrRouteArr","_tmpNavIds","tmpRouteNavId","nav","_unusedNavigators","removeNavigator","tmpnav","GenericEvent","BindingUtil","BindObjDictionary","objCounter","bindObjIdPrefix","_srcObj","_srcProp","_evtname","_targObj","_targProp","srcObject","srcPropStr","srcObjKey","tmpId","nodeName","dataset","bindid","addToBindDictionary","srcPropArray","value","bindObjArray","targetObject","getTargetObject","key","Obj","synchronise","srcObjfrmEvt","eleid","info","srcPropArrayLen","tmpProp","tmpPropStr","tmpval","synchroniseTargetObj","srcProp","tarObjArray","tarObjArrayLen","tarObj","obj","prop","targObj","targProp","tarObject","srcObj","evtname","twoway","Binds","removeListeners","sourceObj","BindingUtilss"],"mappings":"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"}